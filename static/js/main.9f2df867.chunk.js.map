{"version":3,"sources":["components/Filter/Filter.module.scss","components/Container/Container.module.scss","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducers.js","redux/store.js","components/Container/index.jsx","components/ContactForm/index.jsx","components/ContactList/index.jsx","components/Filter/index.jsx","App.js","index.js","components/ContactForm/ContactForm.module.scss","components/ContactList/ContactList.module.scss"],"names":["module","exports","addContact","createAction","deleteContact","filterContact","contacts","createReducer","actions","state","payload","filter","contact","id","_","rootReducer","combineReducers","persistConfig","key","storage","blacklist","persistedReducer","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","devTools","process","persistor","persistStore","Container","children","this","props","className","styles","container","Component","ContactForm","name","number","handleSaveName","target","value","setState","handleSubmit","event","preventDefault","some","elem","alert","reset","contactSubmit","onSubmit","contactsForm","label","input","type","pattern","title","required","onChange","addButton","connect","dispatch","uuidv4","allContacts","formattedFilter","toLowerCase","includes","getVisibleContacts","onDeleteContact","contactList","map","listItem","deleteButton","onClick","filterLabel","filterInput","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.9f2df867.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__3vf4Y\",\"filterInput\":\"Filter_filterInput__2Nlyt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__R9lLE\"};","// import actionTypes from '../phonebook/phonebook-types';\nimport { createAction } from '@reduxjs/toolkit';\n\n// const addContact = (contact) => ({\n//     type: actionTypes.ADD,\n//     payload: contact\n// });\n\n// const deleteContact = (contactID) => ({\n//     type: actionTypes.DELETE,\n//     payload: contactID\n// });\n\n// const filterContact = (name) => ({\n//     type: actionTypes.FILTER,\n//     payload: name\n// });\n\nconst addContact = createAction('phonebook/add');\nconst deleteContact = createAction('phonebook/delete');\nconst filterContact = createAction('phonebook/filter');\n\nexport { addContact, deleteContact, filterContact };\n","import { createReducer } from '@reduxjs/toolkit';\n// import actionTypes from './phonebook-types';\nimport * as actions from './phonebook-actions';\n\n// const contacts = (state = [], {type, payload}) => {\n//     switch (type) {\n//         case actionTypes.ADD:\n//             return [...state, payload]\n\n//         case actionTypes.DELETE:\n//             return state.filter(contact => contact.id !== payload)\n\n//         default:\n//             return state;\n//     }\n// }\n\n// const filter = (state = '', {type, payload}) => {\n//     switch (type) {\n//         case actionTypes.FILTER:\n//             return payload;\n\n//         default:\n//             return state;\n//     }\n\n// }\n\nconst contacts = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.filterContact]: (_, { payload }) => payload,\n});\n\nexport { contacts, filter };\n","// import { combineReducers } from 'redux';\nimport { logger } from 'redux-logger';\nimport {\n  configureStore,\n  combineReducers,\n  getDefaultMiddleware,\n} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n// import { composeWithDevTools } from 'redux-devtools-extension';\nimport { contacts, filter } from './phonebook/phonebook-reducers';\n\nconst rootReducer = combineReducers({\n  contacts,\n  filter,\n});\n\n// const store = createStore(rootReducer, composeWithDevTools());\n\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import { Component } from 'react';\r\nimport styles from './Container.module.scss';\r\n\r\nclass Container extends Component {\r\n  render() {\r\n    const { children } = this.props;\r\n\r\n    return <section className={styles.container}>{children}</section>;\r\n  }\r\n}\r\n\r\nexport default Container;\r\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { connect } from 'react-redux';\nimport { addContact } from '../../redux/phonebook/phonebook-actions';\nimport styles from './ContactForm.module.scss';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleSaveName = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { name } = this.state;\n    const { contacts } = this.props;\n    if (contacts.some(elem => elem.name === name)) {\n      alert(`${name} is already in contacts`);\n      this.reset();\n      return;\n    }\n    this.props.contactSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.contactsForm}>\n        <label className={styles.label}>\n          Name\n          <br />\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            onChange={this.handleSaveName}\n          />\n        </label>\n        <label className={styles.label}>\n          Number\n          <br />\n          <input\n            className={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n            required\n            value={number}\n            onChange={this.handleSaveName}\n          />\n        </label>\n        <button className={styles.addButton} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  contactSubmit: ({ name, number }) =>\n    dispatch(\n      addContact({\n        id: uuidv4(),\n        name,\n        number,\n      }),\n    ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import { connect } from 'react-redux';\nimport { deleteContact } from '../../redux/phonebook/phonebook-actions';\nimport styles from './ContactList.module.scss';\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ul className={styles.contactList}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={styles.listItem} key={id}>\n          <span>{name}</span>:<span className={styles.number}>{number}</span>\n          <button\n            className={styles.deleteButton}\n            onClick={() => onDeleteContact(id)}\n          >\n            delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const formattedFilter = filter.toLowerCase();\n  return allContacts.filter(({ name }) =>\n    name.toLowerCase().includes(formattedFilter),\n  );\n};\n\nconst mapStateToProps = state => {\n  const { contacts, filter } = state;\n  const visibleContacts = getVisibleContacts(contacts, filter);\n  return {\n    contacts: visibleContacts,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import { connect } from 'react-redux';\nimport { filterContact } from '../../redux/phonebook/phonebook-actions';\nimport styles from './Filter.module.scss';\n\nfunction Filter({ filter, filterContact }) {\n  return (\n    <label className={styles.filterLabel}>\n      Find contacts by name\n      <br />\n      <input\n        className={styles.filterInput}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={filterContact}\n      />\n    </label>\n  );\n}\n\nconst mapStateToProps = state => ({\n  filter: state.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  filterContact: ({ target: { value } }) => dispatch(filterContact(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nfunction App() {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsForm\":\"ContactForm_contactsForm__3iqs3\",\"label\":\"ContactForm_label__L8-Fa\",\"input\":\"ContactForm_input__3jrnV\",\"addButton\":\"ContactForm_addButton__2vDCz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__Wt5sC\",\"listItem\":\"ContactList_listItem__3exSI\",\"number\":\"ContactList_number__3xNfL\",\"deleteButton\":\"ContactList_deleteButton__34H2n\"};"],"sourceRoot":""}